CREATE OR REPLACE PROCEDURE agregar_venta(p_cantidad NUMBER, p_codigo_producto VARCHAR2, p_numero_factura VARCHAR2, p_rut_cliente VARCHAR2) IS
    v_precio_producto NUMBER;
    v_total NUMBER;
    v_existe_factura NUMBER;
    v_subtotal FACTURA.SUBTOTAL%TYPE;
    v_iva FACTURA.IVA%TYPE;
    v_total_factura NUMBER;
BEGIN
    -- Verificar si existe una factura con el n√∫mero de factura de la venta
    SELECT COUNT(*)
    INTO v_existe_factura
    FROM FACTURA
    WHERE NUMERO = p_numero_factura;
    
    -- Si no existe la factura, crear una nueva
    IF v_existe_factura = 0 THEN
        generar_factura(p_numero_factura, SYSDATE, 0.16, p_rut_cliente);
    END IF;
    
    -- Obtener el precio del producto
    SELECT precio_unitario
    INTO v_precio_producto
    FROM PRODUCTO
    WHERE CODIGO = p_codigo_producto;

    -- Calcular el total de la venta
    v_total := p_cantidad * v_precio_producto;

    -- Obtener el subtotal y el IVA de la factura
    SELECT SUBTOTAL, IVA
    INTO v_subtotal, v_iva
    FROM FACTURA
    WHERE NUMERO = p_numero_factura;

    -- Calcular el nuevo subtotal y el total de la factura
    v_subtotal := v_subtotal + v_total;
    v_iva := v_subtotal * 0.16; -- Asumiendo que el IVA es del 16%
    v_total_factura := v_subtotal + v_iva;

    -- Actualizar el subtotal, el IVA y el total de la factura
    UPDATE FACTURA
    SET SUBTOTAL = v_subtotal,
        IVA = v_iva,
        TOTAL = v_total_factura
    WHERE NUMERO = p_numero_factura;

    -- Insertar la venta en la tabla VENTA
    INSERT INTO VENTA (CANTIDAD, TOTAL, CODIGO, NUMERO)
    VALUES (p_cantidad, v_total, p_codigo_producto, p_numero_factura);
END agregar_venta;

CREATE OR REPLACE PROCEDURE generar_factura(p_numero_factura VARCHAR2, p_fecha DATE, p_iva NUMBER, c_rut VARCHAR2) IS
BEGIN
    -- Insertar la factura en la tabla FACTURA
    INSERT INTO FACTURA (NUMERO, FECHA, SUBTOTAL, IVA, TOTAL, RUT)
    VALUES (p_numero_factura, p_fecha, 0, p_iva, 0, c_rut);
END generar_factura;

--Obtener factura

CREATE OR REPLACE PROCEDURE OBTENER_FACTURA (
    P_NUMERO IN VARCHAR2
) AS
    V_FECHA FACTURA.FECHA%TYPE;
    V_SUBTOTAL FACTURA.SUBTOTAL%TYPE;
    V_IVA FACTURA.IVA%TYPE;
    V_TOTAL FACTURA.TOTAL%TYPE;
    V_CODIGO PRODUCTO.CODIGO%TYPE;
    V_DESCRIPCION PRODUCTO.DESCRIPCION%TYPE;
    V_PRECIO_UNITARIO PRODUCTO.PRECIO_UNITARIO%TYPE;
    V_CANTIDAD VENTA.CANTIDAD%TYPE;
    V_TOTAL_VENTA VENTA.TOTAL%TYPE;
    V_RUT CLIENTE.RUT%TYPE;
    V_NOMBRE CLIENTE.NOMBRE%TYPE;
    V_APELLIDO1 CLIENTE.APELLIDO1%TYPE;
    V_APELLIDO2 CLIENTE.APELLIDO2%TYPE;
    V_DOMICILIO CLIENTE.DOMICILIO%TYPE;
    V_TELEFONO CLIENTE.TELEFONO%TYPE;
BEGIN
    -- Obtener datos de la factura
    SELECT FECHA, SUBTOTAL, IVA, TOTAL
    INTO V_FECHA, V_SUBTOTAL, V_IVA, V_TOTAL
    FROM FACTURA
    WHERE NUMERO = P_NUMERO;

    -- Obtener datos del cliente
    SELECT RUT, NOMBRE, APELLIDO1, APELLIDO2, DOMICILIO, TELEFONO
    INTO V_RUT, V_NOMBRE, V_APELLIDO1, V_APELLIDO2, V_DOMICILIO, V_TELEFONO
    FROM CLIENTE
    WHERE RUT IN (
        SELECT RUT
        FROM FACTURA
        WHERE NUMERO = P_NUMERO
    );
    --Obtener datos de los productos y ventas      
    SELECT CODIGO, DESCRIPCION, PRECIO_UNITARIO, CANTIDAD, TOTAL
    INTO V_CODIGO, V_DESCRIPCION, V_PRECIO_UNITARIO, V_CANTIDAD, V_TOTAL_VENTA
    FROM PRODUCTO, VENTA
    WHERE CODIGO IN (
        SELECT CODIGO
        FROM VENTA
        WHERE NUMERO = P_NUMERO
    );
    
END OBTENER_FACTURA;

--Consulta todos los productos vendidos de cualquier factura

SELECT F.NUMERO AS FACTURA, P.DESCRIPCION AS PRODUCTO, SUM(V.CANTIDAD) AS CANTIDAD_VENDIDA
FROM FACTURA F
JOIN VENTA V ON F.NUMERO = V.NUMERO
JOIN PRODUCTO P ON P.CODIGO = V.CODIGO
WHERE F.NUMERO = 'CODIGO DE FACTURA'
GROUP BY F.NUMERO, P.DESCRIPCION;